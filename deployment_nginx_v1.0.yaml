apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-index
  namespace: nginx
  annotations:
    kubernetes.io/change-cause: first_version
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      name: index
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: nginx
        name: index
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - tomcat
                  - key: name
                    operator: In
                    values:
                      - index
              topologyKey: "kubernetes.io/hostname"
              namespaces:
                - tomcat  # 'tomcat' 네임스페이스에 있는 pod에 대한 affinity 설정
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: name
                    operator: In
                    values:
                      - index
              topologyKey: "kubernetes.io/hostname"

      containers:
        - image: 590183985022.dkr.ecr.ap-northeast-2.amazonaws.com/nginx-index
          name: index
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: "/usr/share/nginx/html/data"
              name: html
          resources:
            limits:
              cpu: 200m
              memory: 250Mi
            requests:
              cpu: 200m
              memory: 250Mi
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: pvc-nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-films
  namespace: nginx
  annotations:
    kubernetes.io/change-cause: first_version
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      name: films
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: nginx
        name: films
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - tomcat
                  - key: name
                    operator: In
                    values:
                      - films
              topologyKey: "kubernetes.io/hostname"
              namespaces:
                - tomcat
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: name
                    operator: In
                    values:
                      - films
              topologyKey: "kubernetes.io/hostname"
      containers:
        - image: 590183985022.dkr.ecr.ap-northeast-2.amazonaws.com/nginx-films
          name: films
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: "/usr/share/nginx/html/data"
              name: html
          resources:
            limits:
              cpu: 200m
              memory: 250Mi
            requests:
              cpu: 200m
              memory: 250Mi
          livenessProbe:
            httpGet:
              path: /films.jsp
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: pvc-nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-purchase
  namespace: nginx
  annotations:
    kubernetes.io/change-cause: first_version
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      name: purchase
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: nginx
        name: purchase
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - tomcat
                  - key: name
                    operator: In
                    values:
                      - purchase
              topologyKey: "kubernetes.io/hostname"
              namespaces:
                - tomcat
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: name
                    operator: In
                    values:
                      - purchase
              topologyKey: "kubernetes.io/hostname"
      containers:
        - image: 590183985022.dkr.ecr.ap-northeast-2.amazonaws.com/nginx-purchase
          name: purchase
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: "/usr/share/nginx/html/data"
              name: html
          resources:
            limits:
              cpu: 200m
              memory: 250Mi
            requests:
              cpu: 100m
              memory: 150Mi
          livenessProbe:
            httpGet:
              path: /purchase.jsp
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: pvc-nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-join
  namespace: nginx
  annotations:
    kubernetes.io/change-cause: first_version
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      name: join
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: nginx
        name: join
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - tomcat
                  - key: name
                    operator: In
                    values:
                      - join
              topologyKey: "kubernetes.io/hostname"
              namespaces:
                - tomcat
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: name
                    operator: In
                    values:
                      - join
              topologyKey: "kubernetes.io/hostname"

      containers:
        - image: 590183985022.dkr.ecr.ap-northeast-2.amazonaws.com/nginx-join
          name: join
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: "/usr/share/nginx/html/data"
              name: html
          resources:
            limits:
              cpu: 200m
              memory: 250Mi
            requests:
              cpu: 100m
              memory: 150Mi
          livenessProbe:
            httpGet:
              path: /join.jsp
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: pvc-nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-login
  namespace: nginx
  annotations:
    kubernetes.io/change-cause: first_version
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      name: login
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: nginx
        name: login
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - tomcat
                  - key: name
                    operator: In
                    values:
                      - login
              topologyKey: "kubernetes.io/hostname"
              namespaces:
                - tomcat
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: name
                    operator: In
                    values:
                      - login
              topologyKey: "kubernetes.io/hostname"

      containers:
        - image: 590183985022.dkr.ecr.ap-northeast-2.amazonaws.com/nginx-login
